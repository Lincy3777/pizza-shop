const User = require('../../models/user');
const passport = require('passport');
const bcrypt = require('bcrypt');

function authControl() {
    const _getRedirectUrl = (req) => {
        return req.user.role === 'admin' ? '/admin/orders' : '/customers/orders';
    };

    return {
        login(req, res) {
            res.render('authentication/login');
        },

        async postLogin(req, res, next) {
            const { email, password } = req.body;

            if (!email || !password) {
                req.flash('error', 'Invalid entry, all fields are mandatory');
                req.flash('email', email);
                return res.redirect('/login');
            }

            passport.authenticate('local', (err, user, info) => {
                if (err) {
                    req.flash('error', info.message);
                    return next(err);
                }
                if (!user) {
                    req.flash('error', info.message);
                    return res.redirect('/login');
                }
                req.login(user, (err) => {
                    if (err) {
                        req.flash('error', info.message);
                        return next(err);
                    }
                    return res.redirect(_getRedirectUrl(req)); // Check user role
                });
            })(req, res, next);
        },

        register(req, res) {
            res.render('authentication/register');
        },

        async postRegister(req, res) {
            const { name, email, password } = req.body;

            // Validating the request
            if (!name || !email || !password) {
                req.flash('error', 'Invalid entry, all fields are mandatory');
                req.flash('name', name);
                req.flash('email', email);
                return res.redirect('/register');
            }

            try {
                // Check if email exists
                const userExists = await User.exists({ email: email });

                if (userExists) {
                    req.flash('error', 'Email already exists');
                    req.flash('name', name);
                    req.flash('email', email);
                    return res.redirect('/register');
                }

                // Hashing the password
                const hashPassword = await bcrypt.hash(password, 10);

                // Create a new user account
                const user = new User({
                    name: name,
                    email: email,
                    password: hashPassword
                });

                await user.save();
                
                // Registration is completed
                return res.redirect('/');
            } catch (err) {
                console.error(err);
                req.flash('error', 'Something went wrong');
                return res.redirect('/register');
            }
        },        
    };
}

module.exports = authControl;
